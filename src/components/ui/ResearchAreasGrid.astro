---
interface Props {
  research_areas: {
    title: string;
    description: string;
    field: string;
  }[];
}

const { research_areas } = Astro.props;
---

<h2 class="text-3xl font-bold mb-8">Research Areas</h2>

<!-- Research Areas Grid - 2 rows of 3 cards each -->
<div class="space-y-6">
  <!-- First row: 3 cards -->
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
    {research_areas.slice(0, 3).map((area) => (
      <div class="group p-6 rounded-lg bg-base-200 hover:bg-base-300 transition-all duration-300 border border-base-300 hover:border-primary/20 hover:shadow-lg h-full flex flex-col">
        <h3 class="text-xl font-semibold text-primary group-hover:text-primary-focus transition-colors min-h-[3.5rem] flex items-start mb-3">
          {area.title}
        </h3>
        <p class="text-base-content/80 leading-relaxed flex-grow">
          {area.description}
        </p>
      </div>
    ))}
  </div>
  
  <!-- Second row: 3 cards -->
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
    {research_areas.slice(3, 6).map((area) => (
      <div class="group p-6 rounded-lg bg-base-200 hover:bg-base-300 transition-all duration-300 border border-base-300 hover:border-primary/20 hover:shadow-lg h-full flex flex-col">
        <h3 class="text-xl font-semibold text-primary group-hover:text-primary-focus transition-colors min-h-[3.5rem] flex items-start mb-3">
          {area.title}
        </h3>
        <p class="text-base-content/80 leading-relaxed flex-grow">
          {area.description}
        </p>
      </div>
    ))}
  </div>
</div>