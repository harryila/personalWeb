---
import Layout from '@/layouts/Layout.astro'
import { experiences, education, skills, publications } from '../data/cv'
import { highlightAuthor } from '@/lib/utils'

import type { Experience, Education, Publication } from '../types/cv'

let orderdExperiences: Experience[] = []
let orderdEducations: Education[] = []
let orderedPublications: Publication[] = []

const orderElement = <T extends { time: string }>(a: T, b: T) => {
  const presentValues = ['present', 'now', 'current', 'today']
  if (
			presentValues.includes(
				(a['time'] as string)?.split(' - ')[1]?.toLowerCase()
			)
		) {
			// If the date is 'present', it should be the first element
			return -1
		}
		const dateA = new Date((a['time'] as string)?.split(' - ')[1])
		const dateB = new Date((b['time'] as string)?.split(' - ')[1])
		return dateB.getTime() - dateA.getTime()
}

if (experiences.length > 0) {
	orderdExperiences = experiences.sort((a, b) => {
		return orderElement(a, b)
	})
}

if (education.length > 0) {
	orderdEducations = education.sort((a, b) => {
		return orderElement(a, b)
	})
}

if (publications.length > 0) {
	orderedPublications = publications.sort((a, b) => {
		return orderElement(a, b)
	})
}
---

<Layout title="CV | Harutyun Harry Ilanyan">
	<div class="max-w-4xl mx-auto bg-white dark:bg-base-100 p-8 shadow-lg rounded-lg">
		<!-- Header -->
		<div class="text-center mb-8 border-b pb-6">
			<h1 class="text-4xl font-bold text-base-content mb-2">Harutyun Harry Ilanyan</h1>
			<p class="text-xl text-base-content/80 mb-2">Data Science & Applied Mathematics Student</p>
			<p class="text-lg text-base-content/70">UC Berkeley</p>
			<div class="flex justify-center gap-4 mt-4 text-sm">
				<span class="text-base-content/70">ðŸ“§ harry_ila@berkeley.edu</span>
				<span class="text-base-content/70">ðŸ”— linkedin.com/in/harry-ilanyan</span>
				<span class="text-base-content/70">ðŸ’» github.com/harryila</span>
			</div>
		</div>

		<!-- Education Section -->
		{orderdEducations.length > 0 && (
			<section class="mb-8">
				<h2 class="text-2xl font-bold mb-4 text-base-content border-b border-primary pb-2">Education</h2>
				{orderdEducations.map((edu) => (
					<div class="mb-4">
						<div class="flex justify-between items-start mb-1">
							<h3 class="text-lg font-semibold text-base-content">{edu.degree}</h3>
							<span class="text-sm font-medium text-base-content/80">{edu.time}</span>
						</div>
						<p class="text-base-content/80 font-medium">{edu.school}</p>
						<p class="text-sm text-base-content/70">{edu.location}</p>
						{edu.description && <p class="text-sm text-base-content/80 mt-1">{edu.description}</p>}
					</div>
				))}
			</section>
		)}

		<!-- Experience Section -->
		{orderdExperiences.length > 0 && (
			<section class="mb-8">
				<h2 class="text-2xl font-bold mb-4 text-base-content border-b border-primary pb-2">Experience</h2>
				{orderdExperiences.map((exp) => (
					<div class="mb-4">
						<div class="flex justify-between items-start mb-1">
							<h3 class="text-lg font-semibold text-base-content">{exp.title}</h3>
							<span class="text-sm font-medium text-base-content/80">{exp.time}</span>
						</div>
						<p class="text-base-content/80 font-medium">{exp.company}</p>
						<p class="text-sm text-base-content/70">{exp.location}</p>
						{exp.description && <p class="text-sm text-base-content/80 mt-1">{exp.description}</p>}
					</div>
				))}
			</section>
		)}

		<!-- Skills Section -->
		{skills.length > 0 && (
			<section class="mb-8">
				<h2 class="text-2xl font-bold mb-4 text-base-content border-b border-primary pb-2">Skills</h2>
				<div class="grid grid-cols-1 md:grid-cols-3 gap-4">
					{skills.map((skill) => (
						<div>
							<h3 class="font-semibold text-base-content mb-2">{skill.title}</h3>
							<p class="text-sm text-base-content/80">{skill.description}</p>
						</div>
					))}
				</div>
			</section>
		)}

		<!-- Publications Section -->
		{orderedPublications.length > 0 && (
			<section class="mb-8">
				<h2 class="text-2xl font-bold mb-4 text-base-content border-b border-primary pb-2">Publications</h2>
				{orderedPublications.map((paper) => (
					<div class="mb-4">
						<h3 class="text-lg font-semibold text-base-content mb-1">
							{paper.link ? (
								<a href={paper.link} class="hover:text-primary" target="_blank">{paper.title}</a>
							) : (
								paper.title
							)}
						</h3>
						<p class="text-sm text-base-content/80 mb-1">
							<span set:html={highlightAuthor(paper.authors)} />
						</p>
						<p class="text-sm text-base-content/70 mb-2">
							<em>{paper.journal}</em> â€¢ {paper.time}
						</p>
						{paper.abstract && <p class="text-sm text-base-content/80">{paper.abstract}</p>}
					</div>
				))}
			</section>
		)}

		<!-- Download/Print Button -->
		<div class="text-center mt-8 pt-6 border-t">
			<button 
				onclick="window.print()" 
				class="btn btn-primary"
			>
				<svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
					<path fill-rule="evenodd" d="M5 4v3H4a2 2 0 00-2 2v3a2 2 0 002 2h1v2a2 2 0 002 2h6a2 2 0 002-2v-2h1a2 2 0 002-2V9a2 2 0 00-2-2h-1V4a2 2 0 00-2-2H7a2 2 0 00-2 2zm8 0H7v3h6V4zM5 14H4v-3h1v3zm4 0H7v2h2v-2zm2 0h2v2h-2v-2zm2 0h1v-3h-1v3z" clip-rule="evenodd" />
				</svg>
				Print/Save CV
			</button>
		</div>
	</div>
</Layout>

<style>
	@media print {
		.btn {
			display: none !important;
		}
		
		body {
			background: white !important;
		}
		
		.shadow-lg {
			box-shadow: none !important;
		}
	}
</style>
